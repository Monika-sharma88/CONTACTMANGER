{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/Layout/Header.js","components/Layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/Pages/About.js","components/Pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cf80a37.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        // contacts: state.contacts.filter(\r\n        // contact => contact.id !== action.payload\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    /* contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"jone Doe\",\r\n        email: \"jonedoe@gmail.com\",\r\n        phone: \"333-444-555\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"karen smith\",\r\n        email: \"karen@gmail.com\",\r\n        phone: \"444-555-888\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"kalvin kelli\",\r\n        email: \"kalvin@gmail.com\",\r\n        phone: \"666-777-999\"\r\n      }\r\n    ],*/\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    //.then(res =>\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  /*componentWillMount() {\r\n    console.log(\"componentWillMount.......\");\r\n  }*/\r\n  /* componentDidUpdate() {\r\n    console.log(\"componentDidUpdate....\");\r\n  }*/\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Contacts from \"./components/Contacts\";\r\n//import \"./contact.css\";\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: true\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({\r\n        type: \"DELETE_CONTACT\",\r\n        payload: id\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: \"DELETE_CONTACT\",\r\n        payload: id\r\n      });\r\n    }\r\n  };\r\n  //console.log(\"clicked\");\r\n  // this.props.deleteClickHandler();\r\n\r\n  //onShowClick = e => {\r\n  //this.setstate = {\r\n  //showContactInfo: !this.state.showContactInfo\r\n  //};\r\n  //};\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            //<div>\r\n            //<h4>{name}</h4>\r\n            //<ul>\r\n            //<li> Email:{email}</li>\r\n            //<li> phone:{phone}</li>\r\n            //</ul>\r\n            //</div>\r\n            //);\r\n            //}\r\n            //}\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  //onClick={this.onShowClick.bind(this, contact)}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  //style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n              </h4>\r\n              <Link to={`Contact/edit/${id}`}>\r\n                <i\r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: \"Pointer\",\r\n                    float: \"unsetright\",\r\n                    color: \"black\",\r\n                    marginRight: \"1rem\"\r\n                  }}\r\n                />\r\n              </Link>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n            //}}\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n//Contact.propTypes = {\r\n// name: PropTypes.string.isRequired,\r\n//email: PropTypes.string.isRequired,\r\n//phone: PropTypes.string.isRequired\r\n//};\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n  // deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  /* deleteContact = id => {\r\n    //console.log(id);\r\n    const { contacts } = this.state;\r\n    const newContacts = contacts.filter(contact => contact.id !== id);\r\n    this.setState({\r\n      contacts: newContacts\r\n    });\r\n  };*/\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div>\r\n              <React.Fragment>\r\n                <h1 className=\"display-4 mb-2\">\r\n                  <span className=\"text-danger\"> list</span>\r\n                </h1>\r\n                {contacts.map(contact => (\r\n                  //<h1>{contact.name}</h1>\r\n                  <Contact\r\n                    key={contact.id}\r\n                    // name={contact.name}\r\n                    //email={contact.email}\r\n                    //phone={contact.phone}\r\n                    contact={contact}\r\n                    /* deleteClickHandler={this.deleteContact.bind(\r\n                      this,\r\n                      contact.id\r\n                    )}*/\r\n                  />\r\n                ))}\r\n              </React.Fragment>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    //<div>\r\n    //<h1 style={headingstyle}> {branding}</h1>\r\n    //</div>\r\n    //);\r\n    //};\r\n    <nav className=\"navbar navbar-expands-sm navbar-clark bg-danger mb-3 py--0\">\r\n      <div className=\"Container\">\r\n        <Link to=\"\\\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                HOME\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/Contact/Add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/About\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: propTypes.string.isRequired\r\n};\r\n//const headingstyle = {\r\n//color: \"red\",\r\n//fontSize: \"100px\"\r\n//};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label} </label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\" form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"invalid-feedback\">{error} </div>\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\n//import uuid from \"uuid\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      // name: this.nameInput.current.value,\r\n      //email: this.emailInput.current.value,\r\n      //phone: this.phoneInput.current.value\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  //onNameChange = e => this.setState({ name: e.target.value });\r\n  //onEmailChange = e => this.setState({ email: e.target.value });\r\n\r\n  //onPhoneChange = e => this.setState({ phone: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact Here</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"AddContact\"\r\n                    className=\"btn btn-black bt-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\n//import uuid from \"uuid\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"update Contact\"\r\n                    className=\"btn btn-black bt-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">{props.match.params.id}</h1>\r\n      <p className=\"lead\">Single app to manage Contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-dander\">404</span>\r\n        Page Not Found{\" \"}\r\n      </h1>\r\n      <p className=\"lead\"> sorry that page does not exit</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  componentDidMount() {\r\n    //console.log(\"componentDidMount.....\");\r\n\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  /* componentWillMount() {\r\n    console.log(\"componentWillMount.......\");\r\n  }*/\r\n  /* componentDidUpdate() {\r\n    console.log(\"componentDidUpdate....\");\r\n  }\r\n  componentWillUpdate() {\r\n    console.log(\"componentWillUpdate.......\");\r\n  }*/\r\n  /* componentWillReceiveProps(nextProps,nextState)\r\n  {\r\n    console.log('component will Receive');\r\n  }*/\r\n  /* static getDerivedStateFromPages(nextProps, prevState) {\r\n    return {\r\n      test: \"somthing\"\r\n    };\r\n  }*/\r\n  /*getSnapshotBeforeUpdate(nextProps, prevState) {\r\n    //return {\r\n    //test: \"something\"\r\n    //};\r\n    //console.log(\"getSnapshotBeforeUpdate....\");\r\n  }*/\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>test component</h1>\r\n        <h1>{title}</h1>\r\n        <p> {body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","//import Contact from \"./components/Contact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/Layout/Header\";\nimport React from \"react\";\n//import \"./components/contact.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/Pages/About\";\nimport NotFound from \"./components/Pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nclass App extends React.Component {\n  render() {\n    /*const name = \"monika\";\n    const showHello = true;\n    return (\n      <div className=\"App\">\n        {showHello ? (\n          //<h1> The app component</h1>\n          <h4>hello {name.toUpperCase()} </h4>\n        ) : null}*/\n    /*const showMath = true;\n    const num1 = 40;\n    const num2 = 50;\n    const num3 = 10;\n    let math;\n    if (showMath) {\n      math = (\n        <h4>\n          {num1}+{num2}-{num3}={num1 + num2 - num3}\n        </h4>\n      );\n    } else {\n      math = null;\n    }\n    // <AddContact />\n            <Contacts />\n                           \n    */\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manger\" />\n            <div className=\"Container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n\n                <Route exact path=\"/Contact/add\" component={AddContact} />\n                <Route exact path=\"/Contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/About/:id\" component={About} />\n\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}